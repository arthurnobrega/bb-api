{"version":3,"sources":["../../src/creditCard/index.js"],"names":["BBCreditCard","accountsUrl","BASE_ENDPOINT","headers","DEFAULT_HEADERS","cookie","LoginCookie","getGlobal","response","text","json","JSON","parse","conteiner","telas","sessoes","celulas","map","c","protocolo","parametros","p","reduce","acc","BBCard","loginCookie","brand","nomeBandeira","modality","codigoModalidade","cardAccountNumber","numeroContaCartao","cardNumber","numeroPlastico"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEqBA,Y;;;;;;;;;;;;;;;AAEXC,cAAAA,W,GAAc,4B;;mDAEG,qCAASC,wBAAT,SAAyBD,WAAzB,GAAwC;AAC7DE,gBAAAA,OAAO,oBACFC,0BADE;AAELC,kBAAAA,MAAM,EAAEC,wBAAYC,SAAZ;AAFH;AADsD,eAAxC,C;;;AAAjBC,cAAAA,Q;;mDAOaA,QAAQ,CAACC,IAAT,E;;;AAAbA,cAAAA,I;AACAC,cAAAA,I,GAAOC,IAAI,CAACC,KAAL,CAAWH,IAAX,C;+CAENC,IAAI,CAACG,SAAL,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,OAAxB,CAAgC,CAAhC,EAAmCC,OAAnC,CACJC,GADI,CACA,UAAAC,CAAC;AAAA,uBACJA,CAAC,CAACC,SAAF,CAAYC,UAAZ,CACGH,GADH,CACO,UAAAI,CAAC;AAAA,8DAAQA,CAAC,CAAC,CAAD,CAAT,EAAeA,CAAC,CAAC,CAAD,CAAhB;AAAA,iBADR,EAEGC,MAFH,CAEU,UAACC,GAAD,EAAMF,CAAN;AAAA,2CAAkBE,GAAlB,MAA0BF,CAA1B;AAAA,iBAFV,EAE0C,EAF1C,CADI;AAAA,eADD,EAMJJ,GANI,CAOH,UAAAC,CAAC;AAAA,uBACC,IAAIM,gBAAJ,CAAW;AACTC,kBAAAA,WAAW,EAAEnB,wBAAYC,SAAZ,EADJ;AAETmB,kBAAAA,KAAK,EAAER,CAAC,CAACS,YAFA;AAGTC,kBAAAA,QAAQ,EAAEV,CAAC,CAACW,gBAHH;AAITC,kBAAAA,iBAAiB,EAAEZ,CAAC,CAACa,iBAJZ;AAKTC,kBAAAA,UAAU,EAAEd,CAAC,CAACe;AALL,iBAAX,CADD;AAAA,eAPE,C","sourcesContent":["import fetch from 'node-fetch';\nimport BBCard from './card';\nimport LoginCookie from '../loginCookie';\nimport { BASE_ENDPOINT, DEFAULT_HEADERS } from '../constants';\n\nexport default class BBCreditCard {\n  async getCards() {\n    const accountsUrl = 'tela/ExtratoFatura/entrada';\n\n    const response = await fetch(`${BASE_ENDPOINT}${accountsUrl}`, {\n      headers: {\n        ...DEFAULT_HEADERS,\n        cookie: LoginCookie.getGlobal(),\n      },\n    });\n\n    const text = await response.text();\n    const json = JSON.parse(text);\n\n    return json.conteiner.telas[0].sessoes[0].celulas\n      .map(c =>\n        c.protocolo.parametros\n          .map(p => ({ [p[0]]: p[1] }))\n          .reduce((acc, p) => ({ ...acc, ...p }), {}),\n      )\n      .map(\n        c =>\n          new BBCard({\n            loginCookie: LoginCookie.getGlobal(),\n            brand: c.nomeBandeira,\n            modality: c.codigoModalidade,\n            cardAccountNumber: c.numeroContaCartao,\n            cardNumber: c.numeroPlastico,\n          }),\n      );\n  }\n}\n"],"file":"index.js"}