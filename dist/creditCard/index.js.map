{"version":3,"sources":["../../src/creditCard/index.js"],"names":["BBCreditCard","accountsUrl","BASE_ENDPOINT","headers","DEFAULT_HEADERS","cookie","LoginCookie","getGlobal","response","text","json","JSON","parse","conteiner","telas","sessoes","celulas","map","c","protocolo","parametros","p","reduce","acc","BBCard","loginCookie","brand","nomeBandeira","modality","codigoModalidade","cardAccountNumber","numeroContaCartao","cardNumber","numeroPlastico"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEqBA,Y;;;;;;;;;;;;;;;;;;AAEXC,gBAAAA,W,GAAc,4B;;uBAEG,qCAASC,wBAAT,SAAyBD,WAAzB,GAAwC;AAC7DE,kBAAAA,OAAO,qCACFC,0BADE;AAELC,oBAAAA,MAAM,EAAEC,wBAAYC,SAAZ;AAFH;AADsD,iBAAxC,C;;;AAAjBC,gBAAAA,Q;;uBAOaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACAC,gBAAAA,I,GAAOC,IAAI,CAACC,KAAL,CAAWH,IAAX,C;iDAENC,IAAI,CAACG,SAAL,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,OAAxB,CAAgC,CAAhC,EAAmCC,OAAnC,CACJC,GADI,CACA,UAAAC,CAAC;AAAA,yBACJA,CAAC,CAACC,SAAF,CAAYC,UAAZ,CACGH,GADH,CACO,UAAAI,CAAC;AAAA,gEAAQA,CAAC,CAAC,CAAD,CAAT,EAAeA,CAAC,CAAC,CAAD,CAAhB;AAAA,mBADR,EAEGC,MAFH,CAEU,UAACC,GAAD,EAAMF,CAAN;AAAA,8DAAkBE,GAAlB,EAA0BF,CAA1B;AAAA,mBAFV,EAE0C,EAF1C,CADI;AAAA,iBADD,EAMJJ,GANI,CAOH,UAAAC,CAAC;AAAA,yBACC,IAAIM,gBAAJ,CAAW;AACTC,oBAAAA,WAAW,EAAEnB,wBAAYC,SAAZ,EADJ;AAETmB,oBAAAA,KAAK,EAAER,CAAC,CAACS,YAFA;AAGTC,oBAAAA,QAAQ,EAAEV,CAAC,CAACW,gBAHH;AAITC,oBAAAA,iBAAiB,EAAEZ,CAAC,CAACa,iBAJZ;AAKTC,oBAAAA,UAAU,EAAEd,CAAC,CAACe;AALL,mBAAX,CADD;AAAA,iBAPE,C","sourcesContent":["import fetch from 'node-fetch';\nimport BBCard from './card';\nimport LoginCookie from '../loginCookie';\nimport { BASE_ENDPOINT, DEFAULT_HEADERS } from '../constants';\n\nexport default class BBCreditCard {\n  async getCards() {\n    const accountsUrl = 'tela/ExtratoFatura/entrada';\n\n    const response = await fetch(`${BASE_ENDPOINT}${accountsUrl}`, {\n      headers: {\n        ...DEFAULT_HEADERS,\n        cookie: LoginCookie.getGlobal(),\n      },\n    });\n\n    const text = await response.text();\n    const json = JSON.parse(text);\n\n    return json.conteiner.telas[0].sessoes[0].celulas\n      .map(c =>\n        c.protocolo.parametros\n          .map(p => ({ [p[0]]: p[1] }))\n          .reduce((acc, p) => ({ ...acc, ...p }), {}),\n      )\n      .map(\n        c =>\n          new BBCard({\n            loginCookie: LoginCookie.getGlobal(),\n            brand: c.nomeBandeira,\n            modality: c.codigoModalidade,\n            cardAccountNumber: c.numeroContaCartao,\n            cardNumber: c.numeroPlastico,\n          }),\n      );\n  }\n}\n"],"file":"index.js"}