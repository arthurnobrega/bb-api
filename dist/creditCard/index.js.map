{"version":3,"sources":["../../src/creditCard/index.js"],"names":["BBCreditCard","accountsUrl","BASE_ENDPOINT","headers","DEFAULT_HEADERS","cookie","LoginCookie","getGlobal","response","text","json","JSON","parse","conteiner","telas","sessoes","celulas","map","c","protocolo","parametros","p","reduce","acc","BBCard","loginCookie","brand","nomeBandeira","modality","codigoModalidade","cardAccountNumber","numeroContaCartao","cardNumber","numeroPlastico"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;IAEqBA,Y;;;;;;;;;;;;;;AAEXC,2B,GAAc,4B;;uBAEG,8BAASC,wBAAT,GAAyBD,WAAzB,EAAwC;AAC7DE,sDACKC,0BADL;AAEEC,4BAAQC,sBAAYC,SAAZ;AAFV;AAD6D,iBAAxC,C;;;AAAjBC,wB;;uBAOaA,SAASC,IAAT,E;;;AAAbA,oB;AACAC,oB,GAAOC,KAAKC,KAAL,CAAWH,IAAX,C;iDAENC,KAAKG,SAAL,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,OAAxB,CAAgC,CAAhC,EAAmCC,OAAnC,CACJC,GADI,CACA;AAAA,yBACHC,EAAEC,SAAF,CAAYC,UAAZ,CACGH,GADH,CACO;AAAA,6DAASI,EAAE,CAAF,CAAT,EAAgBA,EAAE,CAAF,CAAhB;AAAA,mBADP,EAEGC,MAFH,CAEU,UAACC,GAAD,EAAMF,CAAN;AAAA,sDAAkBE,GAAlB,EAA0BF,CAA1B;AAAA,mBAFV,EAE0C,EAF1C,CADG;AAAA,iBADA,EAMJJ,GANI,CAOH;AAAA,yBACE,IAAIO,cAAJ,CAAW;AACTC,iCAAanB,sBAAYC,SAAZ,EADJ;AAETmB,2BAAOR,EAAES,YAFA;AAGTC,8BAAUV,EAAEW,gBAHH;AAITC,uCAAmBZ,EAAEa,iBAJZ;AAKTC,gCAAYd,EAAEe;AALL,mBAAX,CADF;AAAA,iBAPG,C;;;;;;;;;;;;;;;;;;;;kBAdUjC,Y","file":"index.js","sourcesContent":["import fetch from 'node-fetch';\nimport BBCard from './card';\nimport LoginCookie from '../loginCookie';\nimport { BASE_ENDPOINT, DEFAULT_HEADERS } from '../constants';\n\nexport default class BBCreditCard {\n  async getCards() {\n    const accountsUrl = 'tela/ExtratoFatura/entrada';\n\n    const response = await fetch(`${BASE_ENDPOINT}${accountsUrl}`, {\n      headers: {\n        ...DEFAULT_HEADERS,\n        cookie: LoginCookie.getGlobal(),\n      },\n    });\n\n    const text = await response.text();\n    const json = JSON.parse(text);\n\n    return json.conteiner.telas[0].sessoes[0].celulas\n      .map(c =>\n        c.protocolo.parametros\n          .map(p => ({ [p[0]]: p[1] }))\n          .reduce((acc, p) => ({ ...acc, ...p }), {}),\n      )\n      .map(\n        c =>\n          new BBCard({\n            loginCookie: LoginCookie.getGlobal(),\n            brand: c.nomeBandeira,\n            modality: c.codigoModalidade,\n            cardAccountNumber: c.numeroContaCartao,\n            cardNumber: c.numeroPlastico,\n          }),\n      );\n  }\n}\n"]}