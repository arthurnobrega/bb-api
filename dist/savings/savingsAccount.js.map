{"version":3,"sources":["../../src/savings/savingsAccount.js"],"names":["BBSavingsAccount","variation","description","year","month","pad","s","toString","padStart","accountsUrl","params","metodo","variacao","periodo","BASE_ENDPOINT","querystring","stringify","headers","DEFAULT_HEADERS","cookie","LoginCookie","getGlobal","response","text","json","JSON","parse","session","conteiner","telas","sessoes","find","cabecalho","includes","celulas","filter","c","componentes","length","texto","map","date","amount","Date"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;IAEqBA,gB;AACnB,kCAAwC;AAAA,QAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,QAAfC,WAAe,QAAfA,WAAe;AAAA;;AACtC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;;;;;YAEuBC,I,SAAAA,I;YAAMC,K,SAAAA,K;;;;;;AACtBC,mB,GAAM,SAANA,GAAM;AAAA,yBAAKC,EAAEC,QAAF,GAAaC,QAAb,CAAsB,GAAtB,EAA2B,CAA3B,CAAL;AAAA,iB;;AACNC,2B,GAAc,oC;AACdC,sB,GAAS;AACbC,0BAAQ,aADK;AAEbC,4BAAU,KAAKX,SAFF;AAGbY,mCAAeR,IAAID,KAAJ,CAAf,SAA6BD;AAHhB,iB;;uBAMQ,8BAClBW,wBADkB,GACFL,WADE,SACaM,sBAAYC,SAAZ,CAAsBN,MAAtB,CADb,EAErB;AACEO,sDACKC,0BADL;AAEEC,4BAAQC,sBAAYC,SAAZ;AAFV;AADF,iBAFqB,C;;;AAAjBC,wB;;uBAUaA,SAASC,IAAT,E;;;AAAbA,oB;AACAC,oB,GAAOC,KAAKC,KAAL,CAAWH,IAAX,C;AAEPI,uB,GAAUH,KAAKI,SAAL,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,OAAxB,CAAgCC,IAAhC,CACd;AAAA,yBAAKzB,EAAE0B,SAAF,IAAe1B,EAAE0B,SAAF,CAAYC,QAAZ,CAAqB,gBAArB,CAApB;AAAA,iBADc,C;iDAGTN,QAAQO,OAAR,CACJC,MADI,CAEH;AAAA,yBACEC,EAAEC,WAAF,CAAcC,MAAd,KAAyB,CAAzB,IACAF,EAAEC,WAAF,CAAc,CAAd,EAAiBA,WAAjB,CAA6B,CAA7B,EAAgCE,KAAhC,KAA0C,EAD1C,IAEAH,EAAEC,WAAF,CAAc,CAAd,EAAiBA,WAAjB,CAA6B,CAA7B,EAAgCE,KAAhC,KAA0C,EAF1C,IAGAH,EAAEC,WAAF,CAAc,CAAd,EAAiBA,WAAjB,CAA6B,CAA7B,EAAgCE,KAAhC,KAA0C,EAJ5C;AAAA,iBAFG,EAQJJ,MARI,CAQG;AAAA,yBAAKC,EAAEC,WAAF,CAAc,CAAd,EAAiBA,WAAjB,CAA6B,CAA7B,EAAgCE,KAAhC,KAA0C,KAA/C;AAAA,iBARH,EASJC,GATI,CASA,aAAK;AACR,sBAAMC,OAAOL,EAAEC,WAAF,CAAc,CAAd,EAAiBA,WAAjB,CAA6B,CAA7B,EAAgCE,KAA7C;AACA,sBAAMrC,cAAckC,EAAEC,WAAF,CAAc,CAAd,EAAiBA,WAAjB,CAA6B,CAA7B,EAAgCE,KAApD;AACA,sBAAMG,SAASN,EAAEC,WAAF,CAAc,CAAd,EAAiBA,WAAjB,CAA6B,CAA7B,EAAgCE,KAA/C;;AAEA,yBAAO;AACLE,0BAAM,IAAIE,IAAJ,CAASxC,IAAT,EAAeC,QAAQ,CAAvB,EAA0BqC,IAA1B,CADD;AAELvC,iCAAa,+BAAiBA,WAAjB,CAFR;AAGLwC,4BAAQ,gCAAkBA,MAAlB;AAHH,mBAAP;AAKD,iBAnBI,C;;;;;;;;;;;;;;;;;;;;kBA/BU1C,gB","file":"savingsAccount.js","sourcesContent":["import fetch from 'node-fetch';\nimport querystring from 'querystring';\nimport LoginCookie from '../loginCookie';\nimport { BASE_ENDPOINT, DEFAULT_HEADERS } from '../constants';\nimport { treatDescription, parseAmountString } from '../helpers';\n\nexport default class BBSavingsAccount {\n  constructor({ variation, description }) {\n    this.variation = variation;\n    this.description = description;\n  }\n\n  async getTransactions({ year, month }) {\n    const pad = s => s.toString().padStart('0', 2);\n    const accountsUrl = 'tela/ExtratoDePoupanca/menuPeriodo';\n    const params = {\n      metodo: 'mesAnterior',\n      variacao: this.variation,\n      periodo: `01/${pad(month)}/${year}`,\n    };\n\n    const response = await fetch(\n      `${BASE_ENDPOINT}${accountsUrl}?${querystring.stringify(params)}`,\n      {\n        headers: {\n          ...DEFAULT_HEADERS,\n          cookie: LoginCookie.getGlobal(),\n        },\n      },\n    );\n\n    const text = await response.text();\n    const json = JSON.parse(text);\n\n    const session = json.conteiner.telas[0].sessoes.find(\n      s => s.cabecalho && s.cabecalho.includes('Mês referência'),\n    );\n    return session.celulas\n      .filter(\n        c =>\n          c.componentes.length === 3 &&\n          c.componentes[0].componentes[0].texto !== '' &&\n          c.componentes[1].componentes[0].texto !== '' &&\n          c.componentes[2].componentes[0].texto !== '',\n      )\n      .filter(c => c.componentes[0].componentes[0].texto !== 'Dia')\n      .map(c => {\n        const date = c.componentes[0].componentes[0].texto;\n        const description = c.componentes[1].componentes[0].texto;\n        const amount = c.componentes[2].componentes[0].texto;\n\n        return {\n          date: new Date(year, month - 1, date),\n          description: treatDescription(description),\n          amount: parseAmountString(amount),\n        };\n      });\n  }\n}\n"]}