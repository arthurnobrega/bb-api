{"version":3,"sources":["../src/bb.js"],"names":["apiEndpoint","headers","getMonthNumber","monthName","monthNumbers","Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","mountDate","year","day","Date","parseAmountString","amountString","parts","split","isPositive","amount","parseFloat","replace","treatDescription","description","BB","loginCookie","refreshHash","hashUrl","params","id","method","body","querystring","stringify","response","text","hash","login","branch","account","password","loginUrl","idh","dependenciaOrigem","numeroContratoOrigem","senhaConta","get","JSON","parse","getBalance","balanceUrl","cookie","servicoSaldo","saldo","getTransactions","options","transactionsUrl","month","periodo","json","transactions","conteiner","telas","sessoes","reduce","acc","session","monthString","TIPO","cabecalho","indexOf","celulas","cellAcc","cell","componentes","length","texto","includes","date"],"mappings":"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","file":"bb.js","sourcesContent":["import fetch from 'node-fetch'\nimport querystring from 'querystring'\n\nconst apiEndpoint = 'https://mobi.bb.com.br/mov-centralizador/'\n\nconst headers = {\n  'User-Agent': 'Android;Google Nexus 5 - 6.0.0 - API 23 - 1080x1920;Android;6.0;vbox86p-userdebug 6.0 MRA58K eng.buildbot.20160110.195928 test-keys;mov-android-app;6.14.0.1;en_US;cpu=0|clock=|ram=2052484 kB|espacoSDInterno=12.46 GB|isSmartphone=true|nfc=false|camera=true|cameraFrontal=true|root=true|reconhecimentoVoz=false|resolucao=1080_1776|densidade=3.0|',\n  'Content-Type': 'application/x-www-form-urlencoded',\n  'Cache-Control': 'no-cache',\n  'Postman-Token': '7ac0e5e1-8b39-457d-ae08-52c82b41bd5b',\n}\n\nfunction getMonthNumber(monthName) {\n  const monthNumbers = {\n    Janeiro: 0,\n    Fevereiro: 1,\n    Março: 2,\n    Abril: 3,\n    Maio: 4,\n    Junho: 5,\n    Julho: 6,\n    Agosto: 7,\n    Setembro: 8,\n    Outubro: 9,\n    Novembro: 10,\n    Dezembro: 11,\n  }\n\n  return monthNumbers[monthName]\n}\n\nfunction mountDate(year, monthName, day) {\n  return new Date(year, getMonthNumber(monthName), day)\n}\n\nfunction parseAmountString(amountString) {\n  const parts = amountString.split(' ')\n  const isPositive = parts[1] === 'C'\n\n  const amount = parseFloat(parts[0].replace('.', '').replace(',', '.'))\n\n  return isPositive ? amount : -amount\n}\n\nfunction treatDescription(description) {\n  return description.replace('\\n', ' ').replace(/ +/g, ' ')\n}\n\nexport default class BB {\n  loginCookie = null\n\n  refreshHash = async () => {\n    const hashUrl = 'hash'\n    const params = { id: '00000000000000000000000000000000' }\n\n    const response = await fetch(`${apiEndpoint}${hashUrl}`, {\n      headers,\n      method: 'POST',\n      body: querystring.stringify(params),\n    })\n\n    const hash = await response.text()\n\n    return hash\n  }\n\n  login = async ({ branch, account, password }) => {\n    const loginUrl = 'servico/ServicoLogin/login'\n    const hash = await this.refreshHash()\n\n    const params = {\n      idh: hash,\n      dependenciaOrigem: branch,\n      numeroContratoOrigem: account,\n      senhaConta: password,\n    }\n\n    const response = await fetch(`${apiEndpoint}${loginUrl}`, {\n      headers,\n      method: 'POST',\n      body: querystring.stringify(params),\n    })\n\n    this.loginCookie = response.headers.get('set-cookie')\n\n    const text = await response.text()\n    const { login } = JSON.parse(text)\n\n    return login\n  }\n\n  getBalance = async () => {\n    const balanceUrl = 'servico/ServicoSaldo/saldo'\n\n    const response = await fetch(`${apiEndpoint}${balanceUrl}`, {\n      headers: {\n        ...headers,\n        cookie: this.loginCookie,\n      },\n      method: 'POST',\n    })\n\n    const text = await response.text()\n    const { servicoSaldo } = JSON.parse(text)\n    const { saldo } = servicoSaldo\n\n    return parseAmountString(saldo)\n  }\n\n  getTransactions = async (options) => {\n    const transactionsUrl = 'tela/ExtratoDeContaCorrente/extrato'\n\n    let params = {}\n\n    if (options && options.year && options.month) {\n      params = { periodo: `01${options.month}${options.year}` }\n    }\n\n    const response = await fetch(`${apiEndpoint}${transactionsUrl}`, {\n      headers: {\n        ...headers,\n        cookie: this.loginCookie,\n      },\n      method: 'POST',\n      body: querystring.stringify(params),\n    })\n\n    const text = await response.text()\n    const json = JSON.parse(text)\n\n    const transactions = json.conteiner.telas[0].sessoes.reduce((acc, session) => {\n      const monthString = 'Mês referência: '\n      if (session.TIPO === 'sessao' && session.cabecalho && session.cabecalho.indexOf(monthString) === 0) {\n        const [monthName, year] = session.cabecalho.replace(monthString, '').replace(' ', '').split('/')\n\n        return [\n          ...acc,\n          ...session.celulas.reduce((cellAcc, cell) => {\n\n            if (cell.TIPO === 'celula' && \n              cell.componentes.length === 3 && \n              cell.componentes[0].componentes[0].texto !== 'Dia') {\n              \n              const description = cell.componentes[1].componentes[0].texto\n              const day = cell.componentes[0].componentes[0].texto\n              const amount = cell.componentes[2].componentes[0].texto\n\n              if (['Saldo Anterior', 'S A L D O'].includes(description)) {\n                return cellAcc\n              }\n\n              return [\n                ...cellAcc,\n                {\n                  date: mountDate(year, monthName, day),\n                  description: treatDescription(description),\n                  amount: parseAmountString(amount),\n                },\n              ]\n            }\n\n            return cellAcc\n          }, []),\n        ]\n      }\n\n      return acc\n    }, [])\n\n    return transactions\n  }\n}\n"]}